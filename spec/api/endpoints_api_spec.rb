=begin
#Telstra Programmable Network API

#Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.

OpenAPI spec version: 2.3.3
Contact: pnapi-support@team.telstra.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for TelstraTPN::EndpointsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EndpointsApi' do
  before do
    # run before each test
    @instance = TelstraTPN::EndpointsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EndpointsApi' do
    it 'should create an instance of EndpointsApi' do
      expect(@instance).to be_instance_of(TelstraTPN::EndpointsApi)
    end
  end

  # unit tests for eisendpointendpointuuidendpointuuidput
  # Update Endpoint name
  # 
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @option opts [Body8] :body 
  # @return [SuccessFragment]
  describe 'eisendpointendpointuuidendpointuuidput test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for eisendpointsendpointuuidassigntopologytagpost
  # Assign an Endpoint to a Topology
  # 
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @option opts [Body9] :body 
  # @return [SuccessFragment]
  describe 'eisendpointsendpointuuidassigntopologytagpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for eisendpointstopologytaguuiddelete
  # Remove Endpoint from a Topology
  # 
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'eisendpointstopologytaguuiddelete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for eisendpointstopologytaguuidtopotaguuidget
  # List Endpoints for Topology
  # List all Endpoints associated with the topology tag.
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20012]
  describe 'eisendpointstopologytaguuidtopotaguuidget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for inventoryendpointendpointuuidget
  # Get information about the specified endpoint
  # 
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2004]
  describe 'inventoryendpointendpointuuidget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for inventoryendpointscustomeruuidcustomeruuidget
  # Get list of endpoints for a customer
  # 
  # @param customeruuid Unique identifier representing a specific customer
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'inventoryendpointscustomeruuidcustomeruuidget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for inventoryregularendpointpost
  # Create Physical (Port) Endpoint
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Body4] :body 
  # @return [nil]
  describe 'inventoryregularendpointpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for inventoryregularvportpost
  # Create VPort for physical endpoint
  # Create VPort representing a VLAN on a Physical Ethernet Port
  # @param [Hash] opts the optional parameters
  # @option opts [Body5] :body 
  # @return [nil]
  describe 'inventoryregularvportpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for inventoryvnfendpointpost
  # Instantiate Virtual Network Function
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Body7] :body 
  # @return [nil]
  describe 'inventoryvnfendpointpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
