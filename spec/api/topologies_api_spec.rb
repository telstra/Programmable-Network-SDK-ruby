=begin
#Telstra Programmable Network API

#Telstra Programmable Network is a self-provisioning platform that allows its users to create on-demand connectivity services between multiple end-points and add various network functions to those services. Programmable Network enables to connectivity to a global ecosystem of networking services as well as public and private cloud services. Once you are connected to the platform on one or more POPs (points of presence), you can start creating those services based on the use case that you want to accomplish. The Programmable Network API is available to all customers who have registered to use the Programmable Network. To register, please contact your account representative.

OpenAPI spec version: 2.3.3
Contact: pnapi-support@team.telstra.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for TelstraTPN::TopologiesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TopologiesApi' do
  before do
    # run before each test
    @instance = TelstraTPN::TopologiesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TopologiesApi' do
    it 'should create an instance of TopologiesApi' do
      expect(@instance).to be_instance_of(TelstraTPN::TopologiesApi)
    end
  end

  # unit tests for eisendpointsendpointuuidassigntopologytagpost
  # Assign an Endpoint to a Topology
  # 
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @option opts [Body9] :body 
  # @return [SuccessFragment]
  describe 'eisendpointsendpointuuidassigntopologytagpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for eisendpointstopologytaguuiddelete
  # Remove Endpoint from a Topology
  # 
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param endpointuuid Unique identifier representing a specific endpoint
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'eisendpointstopologytaguuiddelete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for eisendpointstopologytaguuidtopotaguuidget
  # List Endpoints for Topology
  # List all Endpoints associated with the topology tag.
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20012]
  describe 'eisendpointstopologytaguuidtopotaguuidget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagget
  # List all topology tags
  # 
  # @param [Hash] opts the optional parameters
  # @return [Array<Topology>]
  describe 'ttmstopologytagget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagpost
  # Create a named topology tag
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Body10] :body 
  # @return [Topology]
  describe 'ttmstopologytagpost test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagtopotaguuiddelete
  # Delete a topology tag
  # 
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @option opts [Body13] :body 
  # @return [nil]
  describe 'ttmstopologytagtopotaguuiddelete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagtopotaguuidget
  # Get information about the specified topology tag
  # 
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @option opts [Body11] :body 
  # @return [Topology]
  describe 'ttmstopologytagtopotaguuidget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagtopotaguuidobjectsget
  # List objects for Topology
  # List all objects (Endpoints, Links, VPorts, etc.) associated with the topology tag.
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse20013]
  describe 'ttmstopologytagtopotaguuidobjectsget test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ttmstopologytagtopotaguuidput
  # Update a topology tag&#39;s name and/or description
  # 
  # @param topotaguuid Unique identifier representing a specific topology tag
  # @param [Hash] opts the optional parameters
  # @option opts [Body12] :body 
  # @return [Topology]
  describe 'ttmstopologytagtopotaguuidput test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
